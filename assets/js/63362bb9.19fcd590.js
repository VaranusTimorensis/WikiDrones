"use strict";(self.webpackChunkwikidrones=self.webpackChunkwikidrones||[]).push([[8442],{841:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"commandes_de_vol/Points de passage","title":"Points de passage","description":"Contr\xf4ler un drone par des points de passage","source":"@site/docs/commandes_de_vol/Points de passage.md","sourceDirName":"commandes_de_vol","slug":"/commandes_de_vol/Points de passage","permalink":"/WikiDrones/docs/commandes_de_vol/Points de passage","draft":false,"unlisted":false,"editUrl":"https://github.com/VaranusTimorensis/WikiDrones/docs/commandes_de_vol/Points de passage.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Armer et d\xe9sarmer","permalink":"/WikiDrones/docs/commandes_de_vol/Armer et d\xe9sarmer"},"next":{"title":"Atterrir","permalink":"/WikiDrones/docs/commandes_de_vol/Atterrir"}}');var t=s(4848),r=s(8453);const i={sidebar_position:5},a=void 0,d={},l=[{value:"Contr\xf4ler un drone par des points de passage",id:"contr\xf4ler-un-drone-par-des-points-de-passage",level:3}];function c(e){const n={code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"contr\xf4ler-un-drone-par-des-points-de-passage",children:"Contr\xf4ler un drone par des points de passage"}),"\n",(0,t.jsxs)(n.p,{children:["La m\xe9thode ",(0,t.jsx)(n.code,{children:"publish_position_setpoint"})," permet de contr\xf4ler le drone par des points de passages."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'def publish_position_setpoint(self, x: float, y: float, z: float):\n    """Publish the trajectory setpoint."""\n    msg = TrajectorySetpoint()\n    msg.position = [x, y, z]\n    msg.yaw = 1.57079  # (90 degree)\n    msg.velocity = [0., 0., 0.]\n    msg.acceleration = [float(\'nan\')]*3\n    msg.timestamp = int(self.get_clock().now().nanoseconds / 1000)\n    self.trajectory_setpoint_publisher.publish(msg)\n    self.get_logger().info(f"Publishing position setpoints {[x, y, z]}")\n'})}),"\n",(0,t.jsx)(n.p,{children:"Voici la structure compl\xe8te :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Trajectory setpoint in NED frame\n# Input to PID position controller.\n# Needs to be kinematically consistent and feasible for smooth flight.\n# setting a value to NaN means the state should not be controlled\n\nuint32 MESSAGE_VERSION = 0\n\nuint64 timestamp # time since system start (microseconds)\n\n# NED local world frame\nfloat32[3] position # in meters\nfloat32[3] velocity # in meters/second\nfloat32[3] acceleration # in meters/second^2\nfloat32[3] jerk # in meters/second^3 (for logging only)\n\nfloat32 yaw # euler angle of desired attitude in radians -PI..+PI\nfloat32 yawspeed # angular velocity around NED frame z-axis in radians/second\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Les bool\xe9ens dans les messages ",(0,t.jsx)(n.code,{children:"OffboardControlMode"})," doivent correspondre exactement aux donn\xe9es fournies dans les messages ",(0,t.jsx)(n.code,{children:"TrajectorySetpoint"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var o=s(6540);const t={},r=o.createContext(t);function i(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);