"use strict";(self.webpackChunkwikidrones=self.webpackChunkwikidrones||[]).push([[1492],{8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>a});var s=n(6540);const o={},r=s.createContext(o);function d(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),s.createElement(r.Provider,{value:t},e.children)}},9481:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"commandes_de_vol/Contr\xf4le d\'attitude","title":"Contr\xf4le d\'attitude","description":"Piloter par contr\xf4le d\'attitude","source":"@site/docs/commandes_de_vol/Contr\xf4le d\'attitude.md","sourceDirName":"commandes_de_vol","slug":"/commandes_de_vol/Contr\xf4le d\'attitude","permalink":"/WikiDrones/docs/commandes_de_vol/Contr\xf4le d\'attitude","draft":false,"unlisted":false,"editUrl":"https://github.com/VaranusTimorensis/WikiDrones/docs/commandes_de_vol/Contr\xf4le d\'attitude.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Atterrir","permalink":"/WikiDrones/docs/commandes_de_vol/Atterrir"},"next":{"title":"Mode ACRO","permalink":"/WikiDrones/docs/commandes_de_vol/Mode ACRO"}}');var o=n(4848),r=n(8453);const d={sidebar_position:6},a=void 0,i={},l=[{value:"Piloter par contr\xf4le d&#39;attitude",id:"piloter-par-contr\xf4le-dattitude",level:3}];function c(e){const t={code:"code",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h3,{id:"piloter-par-contr\xf4le-dattitude",children:"Piloter par contr\xf4le d'attitude"}),"\n",(0,o.jsx)(t.p,{children:"Les messages VehicleAttitudeSetpoint permettent de contr\xf4ler l'attitude du drone, comme dans la m\xe9thode ci-dessous :"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'def track_target(self):\n    self.publish_offboard(attitude=True)\n    dt = 0.1\n    ex = (self.x_img - self.cx) / self.cx     # [-1,1]\n    ey = (self.y_img - self.cy) / self.cy\n\n    roll_cmd   = self.pid_roll.update(ex, dt)\n    yaw_cmd    = self.pid_yaw.update(ex, dt)   # m\xeame erreur ex\n    thrust_cmd = self.pid_thrust.update(ey, dt)\n\n    pitch_cmd  = math.radians(self.pitch_deg)\n\n    # Yaw absolu = yaw courant + correction\n    q_xyzw = [self.q[1], self.q[2], self.q[3], self.q[0]]\n    yaw_now = R.from_quat(q_xyzw).as_euler(\'xyz\')[2]\n    yaw_sp  = yaw_now + yaw_cmd\n\n    q_wxyz = quaternion_from_euler(roll_cmd, pitch_cmd, yaw_sp)\n\n    sp = VehicleAttitudeSetpoint()\n    sp.timestamp   = int(self.get_clock().now().nanoseconds / 1e3)\n    sp.q_d         = [float(v) for v in q_wxyz]\n    sp.thrust_body = [0., 0., self.nominal_thrust + thrust_cmd]\n    self.pub_att_sp.publish(sp)\n\n    self.get_logger().info(\n        f"ex={ex:+.3f} roll={roll_cmd:+.3f} yaw\u2206={yaw_cmd:+.3f} "\n        f"thrust={self.nominal_thrust + thrust_cmd:+.3f}"\n    )\n'})}),"\n",(0,o.jsx)(t.p,{children:"La structure attendue du message est la suivante :"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"uint32 MESSAGE_VERSION = 1\n\nuint64 timestamp\t\t# time since system start (microseconds)\n\nfloat32 yaw_sp_move_rate\t# rad/s (commanded by user)\n\n# For quaternion-based attitude control\nfloat32[4] q_d\t\t\t# Desired quaternion for quaternion control\n\n# For clarification: For multicopters thrust_body[0] and thrust[1] are usually 0 and thrust[2] is the negative throttle demand.\n# For fixed wings thrust_x is the throttle demand and thrust_y, thrust_z will usually be zero.\nfloat32[3] thrust_body\t\t# Normalized thrust command in body FRD frame [-1,1]\n\n# TOPICS vehicle_attitude_setpoint mc_virtual_attitude_setpoint fw_virtual_attitude_setpoint\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Avec ces messages, il faut penser \xe0 passer \xe0 True le bool\xe9en msg.attitude dans les messages ",(0,o.jsx)(t.code,{children:"OffboardControlMode"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);